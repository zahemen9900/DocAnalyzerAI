  5%|███████▋                                                                                                                                    | 37/675 [01:36<26:46,  2.52s/it]Traceback (most recent call last):
{'loss': 92.2289, 'grad_norm': 25.913755416870117, 'learning_rate': 1.4705882352941177e-05, 'epoch': 0.22}
{'loss': 90.6522, 'grad_norm': 26.15676498413086, 'learning_rate': 2.9411764705882354e-05, 'epoch': 0.44}
{'loss': 87.2209, 'grad_norm': 30.021413803100586, 'learning_rate': 4.411764705882353e-05, 'epoch': 0.67}
  File "/home/zahemen/projects/dl-lib/DocAnalyzerAI/src/train_finbot_qlora.py", line 292, in <module>
    train()
  File "/home/zahemen/projects/dl-lib/DocAnalyzerAI/src/train_finbot_qlora.py", line 260, in train
    trainer.train()
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/transformers/trainer.py", line 2164, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/transformers/trainer.py", line 2524, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/transformers/trainer.py", line 3687, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/accelerate/accelerator.py", line 2244, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/zahemen/miniconda3/envs/transformer_env/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
